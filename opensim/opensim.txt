OpenSim全称OpenSimulator，是一款开源的3D应用服务器软件。它可以用来创建一个虚拟环境或者虚拟世界，然后可以通过不同的客户端程式来访问这个服务，也可以使用多种协议进行访问。它也是一个可以扩展的平台，模拟出的虚拟三维空间可以使用Sl的客户端程式进行登录，用Opensim搭建的虚拟空间里的原始物体都可以由用户进行动态的创建，修改，删除和执行相应的脚本。
OpenSim的目标不是一个克隆的Sl，由于Opensim的开源，它便成为了一个灵活多变的服务器软件，用户可以自由的添加扩展应用程式。Opensim的可扩展性使得可以与sl交换数据，相信在未来Opensim将成为世界上最大的虚拟服务平台。

体验Opensim：
本文的目标是搭建一个Opensim服务器，在这之前不妨先体验一下Opensim的魅力，先熟悉一下Opensim客户端的操作手法，最简单的方法是到http://osgrid.org/申请一个账户，然后下载客户端，有两个客户端可以选择，Hippo Viewer或者Sl的客户端，分别可以在http://opensim-viewer.sourceforge.net/和http://secondlife.com/support/downloads.php下载到。
opensim-viewer:
安装完后便可以启动，输入账户信息即可进入OSGRID的虚拟世界了，看图。

Sl客户端：
右击桌面上的sl图示，在目标后面加入“-loginuri http://osgrid.org:8002 -loginpage http://osgrid.org/loginscreen.php  -helperuri http://osgrid.org/”
例如：
"C:\Program Files\SecondLife\SecondLife.exe"  -multiple -loginuri http://osgrid.org:8002  -loginpage  http://osgrid.org/loginscreen.php -helperuri http://osgrid.org/“

登陆之后便可以体验一番了。

接下来就让我们一起来搭建一个opensim伺服器，创建一个属于自己的虚拟世界吧！

笔者的搭建平台是Ubuntu9.04 server。

1.下载：
首先去OpenSim官方网站上下载好源代码，可以到http://opensimulator.org/wiki/Download下载，当前最新正式版为0.6.7。当然也可以使用git克隆下来最新的测试版源代码：git clone git://opensimulator.org/git/opensim
笔者在这里下载了0.6.7作为本次搭建的源代码。命令如下：
wget http://dist.opensimulator.org/opensim-0.6.7-release.tar.gz
然后进行解压：
tar -xzvf opensim-0.6.7-release.tar.gz

2.解决依赖关系并构建编译环境：
在编译安装opensim之前需要安装它所依赖的软件包，使用以下命令来完成：
sudo apt-get install subversion nant mono-gmcs libmono-microsoft8.0-cil libmono-system-runtime2.0-cil libgdiplus libmono-i18n2.0-cil libmono-oracle2.0-cil ruby

3.编译安装：
首先解压刚才下载回来的源代码包，并且打开终端机cd进入opensim目录。步骤如下：
cd opensim-0.6.7-release
./runprebuild.sh
nant
经过几分钟的等待（视硬体配置高低而定），便出现了BUILD SUCCEEDED的字样，说明安装成功，如图（01）.

d8dd92c7-c0da-40c7-a06b-9fa18e3c93b8

到了此刻，Opensim已经编译安装完成了，接下来就是要启动它了，在启动它之前我们先做一件事情，将配置文件初始化，使用以下命令即可：
cd opensim
cp OpenSim.ini.example OpenSim.ini

配置文件初始化后再来看看几个命令行参数，在运行OpenSim时可以加在命令行后面：
gridmode，运行独立模式或者Grid模式，如在命令行后面加入“-gridmode=true”即可以grid模式启动Opensim。
physics，例如添加"-physics=OpenDynamicsEngine"在命令行后面，这样无论OpenSim.ini中配置的引擎是什么，这里都会使用OpenDynamicsEngine来运行服务。
inifile，可以自由选择配置文件。
inimaster，允许从主配置文件中读取。
这些参数其实都可以在OpenSim.ini中进行设置。

接下来主要谈谈独立模式和Grid模式的区别，并且我们做的第一步操作就是运行一次独立模式，然后再配置Grid模式，最终使用的OpenSim主要还是Grid模式。
在开启OpenSim独立模式之前，先来介绍一下独立模式好GRID模式到底有什么区别：
从官方网站的介绍可以看出，一个OpenSim服务，包括区域（通过域模拟服务运行）和其他5个核心服务（管理着用户、Grid、资产、库存、以及消息等，这里称之为UGAIM）。
一个运行在独立模式下（在OpenSim.ini中对应配置为gridmode=false）的系统，也称之为“沙盒模式”，这种模式中所有的服务(UGAIM服务和域)都在一个应用程序（OpenSim.exe）中运行。这种模式下，来自其他服务的域是无法挂接到该服务上的。
Grid模式就不同了，5个服务（User、Grid、Asset、Inventory、Messaging，或者叫UGAIM）服务是分别通过五个不同的应用程序来运行的。这表示，这五个应用程序可以运行在一台机器上或者多台不同的 机器上面。在这种模式下，我们使用OpenSim.exe服务来负责运行一个或者多个域，并且负责和五个核心服务进行通信。如果你愿意，这种模式下允许其他人或者其 他机器运行的域挂接到本域服务上。
很显然，运行在Grid模式下的复杂程度要大大高于独立模式。需要对UUID、X、Y位置、服务握手密钥、主avatars以及很多其他配置信息有一个较深的理解。
如果想搭建一个Grid服务器，必须在链接到域服务之间启动你的5个核心服务。当然，如果仅仅希望将提供的域连接到其他Grid服务上，则只需要启动域服务（OpenSim.exe）就可以了，而且要将OpenSim.ini中的gridmode设置为true。

在OpenSim.ini这个文件里面可以配置任何我们所需要的信息。在运行独立模式之前先检查一下OpenSim.ini中的gridmode是否为false，默认就是false。然后用如下命令：
cd opensim/bin
mono OpenSim.exe
接下来会看到一连串的输出信息，当启动完毕后系统将会提示几个信息


